# Nacos config同springcloud-config一样，在项目初始化时，要保证先从配置中心进行配置拉取
# 摘取配置之后 ，才能保证项目的正常启动
# springboot中配置文件的加载顺序题目：bootstrap>application，所以建一个bootstrap
#SpringCloudConfig和 NacosConfig这种统一配置服务在springboot项目中初始化时，都是加载bootstrap.properties配置文件去初始化上下文。
#这是由spring boot的加载属性文件的优先级决定的，想要在加载属性之前去config server上取配置文件，
#那NacosConfig或SpringCloudConfig相关配置就是需要最先加载的，而bootstrap.properties的加载是先于application.properties的，
#所以config client要配置config的相关配置就只能写到bootstrap.properties里了
server:
  port: 3377
  
spring:  application:    name: nacos-config-client #服务配置客户端 
  cloud:    nacos:
    #Nacos注册中心地址      discovery:        server-addr: localhost:8848  #注册中心地址
     #指定yaml格式的配置！！
      config:
        server-addr: localhost:8848 #配置中心地址
        namespace: 933315d4-0be0-46a9-8035-bc29f2073148
        group: TEST_GROUP        file-extension: yaml  #目前只支持【 properties】 和 【yaml】 类型
     #通过以上配置，服务配置客户端3377可以去nacos注册中心8848上读取指定的配置文件：
# ${spring.application.name}-${spring.profile.active}-${spring.cloud.nacos.config.file-extension}
# 本项目yml上述配置，在nacos上对应的【Data ID】，即文件名为: nacos-config-client-dev.yaml  注意：后缀名是.yaml
# 在nacos上配置好后，启动项目，访问 http://localhost:3377/test/info

# Nacos配置规则 ：https://nacos.io/zh-cn/docs/quick-start-spring-cloud.html
# dataId的完整格式：
# ${prefix}-${spring.profile.active}.${file-extension}
# prefix 默认为 【spring.application.name】 的值，也可以通过配置项【 spring.cloud.nacos.config.prefix】来配置。
# 【spring.profile.active】 即为当前环境对应的 profile，详情可以参考 Spring Boot文档。 
# 注意：当 【spring.profile.active】 为空时，对应的连接符 - 也将不存在，dataId 的拼接格式变成 ${prefix}.${file-extension}
# file-exetension 为配置内容的数据格式，可以通过配置项 【spring.cloud.nacos.config.file-extension】 来配置。目前只支持【 properties】 和 【yaml】 类型。
# 通过 Spring Cloud 原生注解 @RefreshScope 实现配置自动更新


# 【实现配置动态更新的步骤】
# 通过调用 Nacos Open API 向 Nacos Server 发布配置：dataId 为example.properties，内容为useLocalCache=true
# curl -X POST "http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=example.properties&group=DEFAULT_GROUP&content=useLocalCache=true"
# 运行 NacosConfigApplication，调用 curl http://localhost:8080/config/get，返回内容是 true。
# 再次调用 Nacos Open API 向 Nacos server 发布配置：dataId 为example.properties，内容为useLocalCache=false
# curl -X POST "http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=example.properties&group=DEFAULT_GROUP&content=useLocalCache=false"
# 再次访问 http://localhost:8080/config/get，此时返回内容为false，说明程序中的useLocalCache值已经被动态更新了。







