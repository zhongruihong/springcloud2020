#客户端负载均衡【轮询算法】公式：
# rest接口第n次请求数%服务器集群【同一服务名下】总数量（如8001 8002为2台） = 实际调用服务器位置下标
# list[0] instances = 127.0.0.1:8001; 
# list[1] instances = 127.0.0.1:8002; 
# list = 2 instances
# 1%2 = 1,index = 1 list.get(index)：127.0.0.1:8002;
# 2%2 = 0,index = 0 list.get(index)：127.0.0.1:8001;
# 3%2 = 1,index = 1 list.get(index)：127.0.0.1:8002;
# 4%2 = 0,index = 0 list.get(index)：127.0.0.1:8001;
#...
# 3台、4台，...，n台集群，同理
#本质就是取余！

#每次服务重启后rest接口计数从1开始 
#
server:
  port: 80

spring:  application:    name: cloud-order-service

eureka:
  client:
    register-with-eureka: true #将自己【服务提供者】注册进eureka server
    fetch-registry: true #是否从eureka server抓取已有的注册信息，单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    service-url:
      #defaultZone: http://localhost:7001/eureka #单机版 注册地址 
      defaultZone: http://eureka1.rui.com:7001/eureka, http://eureka2.rui.com:7002/eureka #集群版，注册地址
  instance:
    instance-id: order80 #规范主机名 ， 在注册中心的status中显示的名称；若不配置此项，status显示的是所在计算机名:应用名:端口
    prefer-ip-address: true #访问路径可显示 IP地址，鼠标悬浮注册中心的status的主机名时，左下角显示对应的ip地址
