server:
  port: 8001
  
eureka:
  client:
    register-with-eureka: true #将自己【服务提供者】注册进eureka server
    fetch-registry: true #是否从eureka server抓取已有的注册信息，单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    service-url:
      #defaultZone: http://eureka1.rui.com:7001/eureka #单机版 注册地址  
      defaultZone: http://eureka1.rui.com:7001/eureka, http://eureka2.rui.com:7002/eureka #集群版，注册地址
  instance:
    instance-id: payment8001 #规范主机名 ， 在注册中心的status中显示的名称；若不配置此项，status显示的是所在计算机名:应用名:端口
    prefer-ip-address: true #访问路径可显示 IP地址，鼠标悬浮注册中心的status的主机名时，左下角显示对应的ip地址
    #心跳检测与续约时间，开发时设置小些，保证服务关闭后注册中心能立即剔除服务！
    lease-renewal-interval-in-seconds: 1 #Eureka客户端向服务发送心跳的时间间隔，默认30秒
    lease-expiration-duration-in-seconds: 2 #Eureka服务端在收到最后一次心中后等待时间上限，默认90秒，超过该时间将剔除服务
spring:
  application:
    name: cloud-payment-hystrix-service #注册到注册中心的应用名称【application】对外显露调用， 在相同应用名称下可能有多个实际应用提供，可通过访问注册中心查看
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource #德鲁伊
#    driver-class-name: org.gjt.mm.mysql.Driver
#    url: jdbc:mysql://localhost:3306/db_springcloud?useUnicode=true?characterEncoding=utf-8&useSSL=false #5.7以后mysql安全加强，url要加上useSSL=false，可能报错
#    username: root
#    password: 123456
    driver-class-name: oracle.jdbc.driver.OracleDriver
    url: jdbc:oracle:thin:@localhost:1521:orcl
    username: scott
    password: scott

mybatis:
  mapperLocations: classpath:mapper/*.xml  #所有mapper的xml文件在类路径的mapper文件夹下
  type-aliases-package: com.rui.springcloud.entity #所有entity别名类所在包

#http://github.com/Netflix/Hystrix
#Hystrix是一个用于处理分布式系统延迟和容错的开源库。可以服务降级、服务熔断、接近实时的监控（图形化监控Hystrix Dashboard）。
#目前停更进行维护。Hystrix is no longer in active development, and is currently in maintenance mode.
#官网推荐用resilience4j ，目前国内用的少
#通过断路器向调用方返回一个符合预期的、可处理的【备选响应】(FallBack)--服务降级，而不是长时间的等待或者抛出调用方法无法处理的异常。  
#能保证在一个依赖出问题时，不会导致整体服务失败，避免连坐（级联故障），导致雪崩
#服务降级 fallback
# 程序运行异常、超时、服务熔断触发降级...
#服务熔断 break
# 直接【拒绝访问】，然后调用服务降级的方法返回友好提示。
#服务限流 limit
# 秒杀、高并发等操作，排队有序进行访问。 