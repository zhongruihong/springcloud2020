#Spring Cloud Alibaba
#https://spring.io/projects/spring-cloud-alibaba
#https://github.com/alibaba/spring-cloud-alibaba   https://github.com/alibaba/spring-cloud-alibaba/blob/master/README-zh.md
#https://github.com/Nepxion
#【服务限流降级】默认支持 WebServlet、WebFlux, OpenFeign、RestTemplate、Spring Cloud Gateway, Zuul, Dubbo 和 RocketMQ 限流降级功能的接入，可以在运行时通过控制台实时修改限流降级规则，还支持查看限流降级 Metrics 监控。
#【服务注册与发现】适配 Spring Cloud 服务注册与发现标准，默认集成了 Ribbon 的支持。
#【分布式配置管理】支持分布式系统中的外部化配置，配置更改时自动刷新。
#【消息驱动能力】基于 Spring Cloud Stream 为微服务应用构建消息驱动能力。【分布式事务】使用 @GlobalTransactional 注解， 高效并且对业务零侵入地解决分布式事务问题。。
#【阿里云对象存储】阿里云提供的海量、安全、低成本、高可靠的云存储服务。支持在任何应用、任何时间、任何地点存储和访问任意类型的数据。
#【分布式任务调度】提供秒级、精准、高可靠、高可用的定时（基于 Cron 表达式）任务调度服务。同时提供分布式的任务执行模型，如网格任务。网格任务支持海量子任务均匀分配到所有 Worker（schedulerx-client）上执行。
#【阿里云短信服务】覆盖全球的短信服务，友好、高效、智能的互联化通讯能力，帮助企业迅速搭建客户触达通道。
#组件
#【Sentinel】把流量作为切入点，从流量控制、熔断降级、系统负载保护等多个维度保护服务的稳定性。
#
#【Nacos】一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。
#  注册中心+配置中心：Nacos=Eureka+Config+Bus
#【RocketMQ】一款开源的分布式消息系统，基于高可用分布式集群技术，提供低延时的、高可靠的消息发布与订阅服务。
#
#【Dubbo：Apache Dubbo™】 是一款高性能 Java RPC 框架。
#
#【Seata】阿里巴巴开源产品，一个易于使用的高性能微服务分布式事务解决方案。
#
#【Alibaba Cloud ACM】一款在分布式架构环境中对应用配置进行集中管理和推送的应用配置中心产品。
#
#【Alibaba Cloud OSS】 阿里云对象存储服务（Object Storage Service，简称 OSS），是阿里云提供的海量、安全、低成本、高可靠的云存储服务。您可以在任何应用、任何时间、任何地点存储和访问任意类型的数据。
#
#【Alibaba Cloud SchedulerX】阿里中间件团队开发的一款分布式任务调度产品，提供秒级、精准、高可靠、高可用的定时（基于 Cron 表达式）任务调度服务。
#
#【Alibaba Cloud SMS】覆盖全球的短信服务，友好、高效、智能的互联化通讯能力，帮助企业迅速搭建客户触达通道。
#
#
#Nacos
#https://github.com/alibaba/nacos
#https://nacos.io/en-us/    https://nacos.io/zh-cn/
#2020年03月31日发布 V1.2.1 版本说明:https://github.com/alibaba/nacos/releases/tag/1.2.1
#里面有下载链接   1.1.4是目前最稳定的版本...
#https://nacos.io/zh-cn/docs/quick-start.html
#下载解压，在解压路径的nacos/bin cmd执行startup.cmd启动nacos
#访问http://localhost:8848/nacos  1.1.4默认账号、密码都是nacos
#1.2.0不用输入账号、密码....


#配置参照 官网：https://nacos.io/en-us/docs/quick-start-spring-cloud.html
server:
  port: 80
#spring.cloud.nacos.config.server-addr=127.0.0.1:8848

#spring.application.name=example
spring:
  application:
    name: nacos-order-consumer  cloud:    nacos:      discovery:        server-addr: localhost:8848 #配置nacos服务注册、发现中心地址
        
        
#消费者去访问的微服务名称（注册成功进nacos的微服务提供者，如9001、9002）、通过配置的方式注入到源码 中，利用RestTemplate+Ribbon访问该应用名称下的服务实例service-url:
  user-service: http://nacos-payment-provider