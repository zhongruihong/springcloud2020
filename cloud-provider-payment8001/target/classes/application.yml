server:
  port: 8001
  
eureka:  client:    register-with-eureka: true #将自己【服务提供者】注册进eureka server
    fetch-registry: true #是否从eureka server抓取已有的注册信息，单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    service-url:      #defaultZone: http://eureka1.rui.com:7001/eureka #单机版 注册地址  
      defaultZone: http://eureka1.rui.com:7001/eureka, http://eureka2.rui.com:7002/eureka #集群版，注册地址
  instance:    instance-id: payment8001 #规范主机名 ， 在注册中心的status中显示的名称；若不配置此项，status显示的是所在计算机名:应用名:端口
    prefer-ip-address: true #访问路径可显示 IP地址，鼠标悬浮注册中心的status的主机名时，左下角显示对应的ip地址
    #心跳检测与续约时间，开发时设置小些，保证服务关闭后注册中心能立即剔除服务！
    lease-renewal-interval-in-seconds: 1 #Eureka客户端向服务发送心跳的时间间隔，默认30秒
    lease-expiration-duration-in-seconds: 2 #Eureka服务端在收到最后一次心中后等待时间上限，默认90秒，超过该时间将剔除服务
spring:
  application:
    name: cloud-payment-service #注册到注册中心的应用名称【application】对外显露调用， 在相同应用名称下可能有多个实际应用提供，可通过访问注册中心查看
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource #德鲁伊
#    driver-class-name: org.gjt.mm.mysql.Driver
#    url: jdbc:mysql://localhost:3306/db_springcloud?useUnicode=true?characterEncoding=utf-8&useSSL=false #5.7以后mysql安全加强，url要加上useSSL=false，可能报错
#    username: root
#    password: 123456
    driver-class-name: oracle.jdbc.driver.OracleDriver
    url: jdbc:oracle:thin:@localhost:1521:orcl
    username: scott
    password: scott
#zipkin监控链路调用：
  zipkin:    base-url: http://localhost:9411  #前提：要启动zipkin的jar
#sleuth采样值介于0-1之间，1表示 全部采集
  sleuth:    sampler:      probability: 1
#在微服务框架中，一个由客户发起的请求在后端系统中会经过多个不同的服务节点调用来协同产生最后的请求结果，
#每一个前段请求都会形成一条复杂的分布式服务调用链路，链路中的任何一环出现高延时或者错误都会引起整个请求最后的失败
#Spring Cloud Sleuth提供了一套完整的服务跟踪解决方案，兼容支持zipkin，一个监控，一个展现（zipkin Dashboard）
#搭建链路监控步骤：
#SpringCloud F版起就不需要自己构建Zipkin Server，只需要调用jar包即可：
#https://dl.bintray.com/openzipkin/maven/io/zipkin/java/zipkin-server/
#zipkin-server-2.12.9-exec.jar
#直接cmd运行  java -jar ./zipkin-server-2.12.9-exec.jar
#访问：http://localhost:9411/
#
#Trace:类似于树结构的Span集合，表示一条调用链路，存在唯一标识 
#Span:表示 调用链路来源，通俗理解为span就是一次请求信息
#
#配置需要监控的服务yml:zipkin配置
#依次启动注册中心/8001/80（打开注解@LoadBalanced获取RestTemplate）
#访问http://localhost/consumer/get/2
mybatis:
  mapperLocations: classpath:mapper/*.xml  #所有mapper的xml文件在类路径的mapper文件夹下
  type-aliases-package: com.rui.springcloud.entity #所有entity别名类所在包
